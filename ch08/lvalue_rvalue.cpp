// C++ 中的左值和右值

/*
	课本描述：
		* 左值：指可被引用的数据对象，例如变量、数组元素、结构成员、引用和解除引用的指针
		* 非左值（右值）：包括字面常量（用引号括起来的字符串除外，它们由其地址表示）和包含
		多项的表达式
		
		* 在C语言中，左值原本是指可以出现在赋值语句左边的实体，但在引入const关键字之后，
		const变量也被叫做左值（不可修改的左值），而原先意义上的左值被称为“可修改的左值”

		* 使用&声明的引用称为左值引用，使用&&声明的引用称为右值引用（C++ 11新增）
*/
#include <iostream>
using namespace std;

int main()
{
	// 确认引号括起来的字符串是左值还是右值
	//const char * (&str) = "i am a string"; // 编译不通过
	const char * (&&str) = "i am a string"; // 编译通过，由此说明字符串常量被编译器当作右值，
											// 课本有误？？？？
}