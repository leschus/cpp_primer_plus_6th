1、从编写一份C++代码到使其运行起来的全过程

	* 编写代码，用到文本编辑器
		- C++源代码文件的后缀有多种形式，不同的编译器支持不完全相同的后缀，常见的后缀形式由cpp, cxx, cc, C等

	* 编译源代码，用到编译器
		- 编译完成将得到目标代码（.o后缀）
	
	* 链接程序，用到链接器
		- 链接过程除了用到编译器生成的程序目标代码文件之外，还会将启动代码以及库代码一同链接进来，形成一个完整的
		可执行程序。
		

2、不同平台的编译和链接
	* UNIX：CC
	* Linux：常用g++编译器
	* Windows命令行：常用g++编译器，来自Cygwin或MinGW
		- 以上三种都是在命令行输入命令进行程序的编译和链接
		- 一般来说，编译器生成目标代码后将自动将其传递给系统的链接器执行链接工作，而不需要手动再调用链接器。
		- 需要显式地链接一些程序库时，使用-l参数
			如程序中使用到数学库中的函数时，需添加-lm参数(**经测试，目前版本的gcc/g++编译器都会自动链接math库了**)
				CC usingmath.cpp -lm
	* Windows编译器：常用Microsoft Visual C++编译器，集成在IDE中
		- 需要创建项目，添加程序文件，然后使用菜单栏中的按键完成项目的编译、链接、运行过程。
		- IDE菜单项中一般包含Compile（编译）、Build（构建）、Make（生成）、Build All（构建全部）、Link（链接）
		Execute(执行)、Run（运行）和Debug（调试）等选项
	* Macintosh上的编译器：常用clang或g++
		- Mac OS X提供了开发框架XCode，其中包含支持多种语言的IDE以及自带的命令行编译器g++和clang